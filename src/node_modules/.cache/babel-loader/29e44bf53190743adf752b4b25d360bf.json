{"ast":null,"code":"var _jsxFileName = \"E:\\\\todo\\\\src\\\\Context\\\\AuthProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { auth } from \"../firebase/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = createContext;\nexport default function AuthProvider({\n  children\n}) {\n  _s();\n\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  React.useEffect(() => {\n    const unsubscibed = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          email,\n          uid,\n          photoURL\n        } = user;\n        setUser({\n          displayName,\n          email,\n          uid,\n          photoURL\n        });\n        setIsLoading(false);\n        navigate(\"/todo\");\n        return;\n      } // reset user info\n\n\n      setUser({});\n      setIsLoading(false);\n      navigate(\"/login\");\n    }); // clean function\n\n    return () => {\n      unsubscibed();\n    };\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user\n    },\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 20\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvider, \"jLhYPWgko0a+nCYPzWUf6sLk/bA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["E:/todo/src/Context/AuthProvider.js"],"names":["React","createContext","useState","useNavigate","auth","AuthContext","AuthProvider","children","user","setUser","navigate","isLoading","setIsLoading","useEffect","unsubscibed","onAuthStateChanged","displayName","email","uid","photoURL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAApB;AAEP,eAAe,SAASK,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACjD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAEAF,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,UAAMC,WAAW,GAAGV,IAAI,CAACW,kBAAL,CAAyBP,IAAD,IAAU;AACpD,UAAIA,IAAJ,EAAU;AACR,cAAM;AAAEQ,UAAAA,WAAF;AAAeC,UAAAA,KAAf;AAAsBC,UAAAA,GAAtB;AAA2BC,UAAAA;AAA3B,YAAwCX,IAA9C;AACAC,QAAAA,OAAO,CAAC;AACNO,UAAAA,WADM;AAENC,UAAAA,KAFM;AAGNC,UAAAA,GAHM;AAINC,UAAAA;AAJM,SAAD,CAAP;AAMAP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,QAAQ,CAAC,OAAD,CAAR;AACA;AACD,OAZmD,CAcpD;;;AACAD,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,KAlBmB,CAApB,CADoB,CAqBpB;;AACA,WAAO,MAAM;AACXI,MAAAA,WAAW;AACZ,KAFD;AAGD,GAzBD,EAyBG,CAACJ,QAAD,CAzBH;AA2BA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF,KAA7B;AAAA,cACGG,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA,YAAH,GAAaJ;AADzB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArCuBD,Y;UAELH,W;;;KAFKG,Y","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../firebase/config\";\r\n\r\nexport const AuthContext = createContext;\r\n\r\nexport default function AuthProvider({ children }) {\r\n  const [user, setUser] = useState({});\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  React.useEffect(() => {\r\n    const unsubscibed = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, email, uid, photoURL } = user;\r\n        setUser({\r\n          displayName,\r\n          email,\r\n          uid,\r\n          photoURL,\r\n        });\r\n        setIsLoading(false);\r\n        navigate(\"/todo\");\r\n        return;\r\n      }\r\n\r\n      // reset user info\r\n      setUser({});\r\n      setIsLoading(false);\r\n      navigate(\"/login\");\r\n    });\r\n\r\n    // clean function\r\n    return () => {\r\n      unsubscibed();\r\n    };\r\n  }, [navigate]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user }}>\r\n      {isLoading ? <div /> : children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}